---
# tasks file for app
- name: Print password
  ansible.builtin.debug:
    var: db_password

- name: "Install packages"
  apt: "name={{ item }} state=present"
  with_items:
    - apt-transport-https
    - rsyslog
    - libgdiplus
    - libc6-dev
    - unzip
    - python3-redis
    
- name: Add Microsoft .Net repository
  apt: "deb=https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb"
  
- name: Install .Net SDK 3.1
  apt: "name=dotnet-sdk-3.1 update_cache=yes state=present"

- name: "Backup app"
  block:
    - name: "Create backup directory"
      file:
        path: "/srv/backup/{{ bkpdate }}/{{ app_prefix }}_{{ app_port }}/"
        state: directory
        mode: 0777
    - name: "Create app backup"
      community.general.archive:
        path:
          - "{{ dest }}{{ app_prefix }}_{{ app_port }}/*"
        dest: "/srv/backup/{{ bkpdate }}/{{ app_prefix }}_{{ app_port }}/{{ app_prefix }}_{{ app_port }}.zip"
        exclude_path:
          - "{{ dest }}{{ app_prefix }}_{{ app_port }}/Log/*"
          - "{{ dest }}{{ app_prefix }}_{{ app_port }}/db/*"
        format: zip
  when: mkbackup

- name: Delete app directory
  become: yes
  file:
    path: "{{ dest }}{{ app_prefix }}_{{ app_port }}"
    state: absent
  notify:
    - Restart bpmsoft service
  when: redeploy
  
- name: Create a app directory
  become: yes
  file:
    path: "{{ dest }}{{ app_prefix }}_{{ app_port }}"
    state: directory  
  register: app_exists

- name: "Deploy and configure app"
  block:
    - name: Extract distr into destination folder
      ansible.builtin.unarchive:
        src: "{{ distr }}"
        dest: "{{ dest }}{{ app_prefix }}_{{ app_port }}"
        exclude: 
        - db
    - name: Extract ITSMBOX_Linux_Sql_dll_fix.zip
      ansible.builtin.unarchive:
        src: "{{ patch }}"
        dest: "{{ dest }}{{ app_prefix }}_{{ app_port }}"
                
    - name: Ensure bpmsoft ConnectionStrings.config
      template: src=ConnectionStrings.config.j2 dest={{ dest }}{{app_prefix }}_{{ app_port }}/ConnectionStrings.config owner=root group=root mode=0644
    - name: Ensure bpmsoft ActorSystem.hocon
      template: src=ActorSystem.hocon.j2 dest={{ dest }}{{app_prefix }}_{{ app_port }}/ActorSystem.hocon owner=root group=root mode=0644
    - name: Ensure bpmsoft BPMSoft.WebHost.dll.config
      template: src=BPMSoft.WebHost.dll.config.j2 dest={{ dest }}{{app_prefix }}_{{ app_port }}/BPMSoft.WebHost.dll.config owner=root group=root mode=0644
    - name: Ensure bpmsoft appsettings.json
      template: src=appsettings.json.j2 dest={{ dest }}{{app_prefix }}_{{ app_port }}/appsettings.json owner=root group=root mode=0644
    - name: Ensure BPMSoft.Tools.WorkspaceConsole.dll.config
      template: src=BPMSoft.Tools.WorkspaceConsole.dll.config.j2 dest={{ dest }}{{app_prefix }}_{{ app_port }}/WorkspaceConsole/BPMSoft.Tools.WorkspaceConsole.dll.config owner=root group=root mode=0644  
      
    - name: Ensure systemd service file
      template: src=bpmsoft.service.j2 dest=/etc/systemd/system/{{app_prefix }}_{{ app_port }}.service
      notify:
        - Start bpmsoft service  
        
    - name: Ensure rsyslog template config
      template: src=rsyslog.d_01-json-template.conf.j2 dest=/etc/rsyslog.d/01-json-template.conf
    - name: Ensure rsyslog bpm service config
      template: src=rsyslog.d_dotnet-bpmsoft-service.conf.j2 dest=/etc/rsyslog.d/dotnet-bpmsoft-service.conf
      notify:
        - Restart rsyslog
        
    - name: Ensure logrotate config
      template: src=logrotate.d_dotnet-bpmsoft-service.j2 dest=/etc/logrotate.d/dotnet-bpmsoft-service
  when: app_exists.changed